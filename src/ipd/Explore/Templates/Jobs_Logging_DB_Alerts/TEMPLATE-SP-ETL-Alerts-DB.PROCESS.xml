<aetgt:getResponse xmlns:aetgt="http://schemas.active-endpoints.com/appmodules/repository/2010/10/avrepository.xsd"
                   xmlns:types1="http://schemas.active-endpoints.com/appmodules/repository/2010/10/avrepository.xsd">
   <types1:Item>
      <types1:EntryId>Gaaa-gt-37438105-2022-02-22T15:23:52.529Z::pd.xml</types1:EntryId>
      <types1:Name>TEMPLATE-SP-ETL-Alerts-DB</types1:Name>
      <types1:ParentFlowIds>Y8DglxbdypKwKBq-gt-37421436-2022-02-22T15:23:52.812Z::pd.xml</types1:ParentFlowIds>
      <types1:MimeType>application/xml+process</types1:MimeType>
      <types1:Description>Template for Integration Sub-Process (SP)  Which uses email notification on Error
version: 1.6</types1:Description>
      <types1:AppliesTo/>
      <types1:Tags>.agent:G01</types1:Tags>
      <types1:VersionLabel>1.0</types1:VersionLabel>
      <types1:State>CURRENT</types1:State>
      <types1:ProcessGroup/>
      <types1:CreatedBy>jbrazda@unicosolution.com.dev</types1:CreatedBy>
      <types1:CreationDate>2022-02-22T15:23:53Z</types1:CreationDate>
      <types1:ModifiedBy>jbrazda@unicosolution.com.dev</types1:ModifiedBy>
      <types1:ModificationDate>2022-02-22T18:43:29Z</types1:ModificationDate>
      <types1:PublicationStatus>out-of-date</types1:PublicationStatus>
      <types1:PublishedBy>jbrazda@unicosolution.com.dev</types1:PublishedBy>
      <types1:PublicationDate>2022-02-22T18:45:43Z</types1:PublicationDate>
      <types1:PublishedContributionId>project:/spi.TEMPLATE-SP-ETL-Alerts-DB/TEMPLATE-SP-ETL-Alerts-DB.pd.xml</types1:PublishedContributionId>
      <types1:AutosaveExists>false</types1:AutosaveExists>
      <types1:Entry>
         <process xmlns="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"
                  xmlns:tfm="http://schemas.active-endpoints.com/appmodules/screenflow/2021/04/taskflowModel.xsd"
                  xmlns:list="urn:activevos:spi:list:functions"
                  displayName="TEMPLATE-SP-ETL-Alerts-DB"
                  name="TEMPLATE-SP-ETL-Alerts-DB"
                  overrideAPIName="false">
            <parameterSet xmlns="http://schemas.active-endpoints.com/appmodules/screenflow/2021/04/taskflowModel.xsd"/>
            <appliesTo/>
            <description>Template for Integration Sub-Process (SP)  Which uses email notification on Error
version: 1.6</description>
            <tags>.agent:G01</tags>
            <generator>Informatica Process Designer 11</generator>
            <input>
               <parameter description="Process Execution Context"
                          name="in_context"
                          required="true"
                          type="reference">
                  <options>
                     <option name="referenceTo">$po:ProcessExecutionContext</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </parameter>
               <parameter description="Job Parameters, change the Type to a Custom Specific Process Object"
                          name="in_parameters"
                          required="true"
                          type="reference">
                  <options>
                     <option name="referenceTo">$po:$any</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </parameter>
            </input>
            <tempFields>
               <field description="" name="tmp_process_title" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
               <field description="" name="tmp_script_out" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
               <field description="" name="tmp_context" type="reference">
                  <options>
                     <option name="referenceTo">$po:ProcessExecutionContext</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </field>
               <field description="" name="tmp_faultInfo" type="reference">
                  <options>
                     <option name="referenceTo">$po:FaultInfo</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </field>
               <field description="" name="tmp_process_name" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
               <field description="" name="tmp_email_input" type="reference">
                  <options>
                     <option name="referenceTo">Email-G01:EmailTaskInput</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                     <option name="guid">2ZM6icvXPAkk6jxADngnoK</option>
                  </options>
               </field>
            </tempFields>
            <notes/>
            <deployment suspendOnFault="false" tracingLevel="verbose">
               <targetLocation>G01</targetLocation>
               <rest/>
            </deployment>
            <flow id="a">
               <start id="b">
                  <link id="j84pnuy0" targetId="j84ih0fn"/>
               </start>
               <assignment id="j84ih0fn">
                  <title>Initialize</title>
                  <operation source="formula" to="temp.tmp_process_name">
                     <expression language="XQuery">util:getAssetName()</expression>
                  </operation>
                  <operation source="formula" to="temp.tmp_process_title">
                     <expression language="XQuery">let $title := $temp.tmp_process_name 
let $pid_label := if (empty($input.in_context[1]/parentProcessId)) then ()
	else concat("pid:",$input.in_context[1]/parentProcessId)
let $job_label := if (empty($input.in_context[1]/jobId)) then () 
	else concat("job:",$input.in_context[1]/jobId)
let $parts := ($title, $pid_label,  $job_label)
return string-join($parts," ")</expression>
                  </operation>
                  <operation source="formula" to="temp.tmp_context">
                     <expression language="XQuery">let $pid := util:getProcessId()
return if (empty($input.in_context)) then
  &lt;ProcessExecutionContext&gt;
     &lt;parentProcessId&gt;{$pid}&lt;/parentProcessId&gt;
     &lt;mainProcessId&gt;{$pid}&lt;/mainProcessId&gt;
     &lt;jobId&gt;{util:generateUUID()}&lt;/jobId&gt;
     &lt;orgId&gt;{util:resolveURN('urn:environment:orgid')}&lt;/orgId&gt;
     &lt;baseURI&gt;{util:resolveURN('ae:base-uri')}&lt;/baseURI&gt;
     &lt;environmentName&gt;{util:resolveURN('urn:environment:name')}&lt;/environmentName&gt;
  &lt;/ProcessExecutionContext&gt;
else 
  &lt;ProcessExecutionContext&gt;
     &lt;parentProcessId&gt;{$pid}&lt;/parentProcessId&gt;
     &lt;mainProcessId&gt;{$input.in_context[1]/mainProcessId}&lt;/mainProcessId&gt;
     &lt;jobId&gt;{$input.in_context[1]/jobId}&lt;/jobId&gt;
     &lt;orgId&gt;{$input.in_context[1]/jobId }&lt;/orgId&gt;
     &lt;baseURI&gt;{$input.in_context[1]/baseURI }&lt;/baseURI&gt;
     &lt;environmentName&gt;{$input.in_context[1]/environmentName }&lt;/environmentName&gt;
  &lt;/ProcessExecutionContext&gt;
</expression>
                  </operation>
                  <operation source="formula" to="temp.tmp_script_out">
                     <expression language="XQuery">ipd:setProcessTitle($temp.tmp_process_title)</expression>
                  </operation>
                  <link id="jv3ynlsr" targetId="jv3ynlsq"/>
               </assignment>
               <service id="jv3ynlsq">
                  <title>Log Integration Start</title>
                  <serviceName>SP-IPaaS-Create-Job-Event-Entry-DB-NA</serviceName>
                  <serviceGUID/>
                  <serviceInput>
                     <parameter name="in_CreateJobLogEventRequest" source="formula">
                        <expression language="XQuery">let $parameters := $input.in_parameters 
return
&lt;CreateJobLogEventRequest&gt;
   &lt;event_message&gt;TODO: Integration Started Message&lt;/event_message&gt;
   &lt;event_time&gt;{current-dateTime()}&lt;/event_time&gt;
   &lt;event_detail&gt;TODO: ADD DETAIL 
Job Paramaters: 
{
for $param in $parameters/*
return
concat(local-name($param),': ',$param/text(), '&amp;#10;') 
}
   &lt;/event_detail&gt;
   &lt;process_id&gt;{$temp.tmp_context[1]/parentProcessId}&lt;/process_id&gt;
   &lt;logging_level&gt;1&lt;/logging_level&gt;
   &lt;process_name&gt;{$temp.tmp_process_name}&lt;/process_name&gt;
   &lt;process_title&gt;{$temp.tmp_process_title}&lt;/process_title&gt;
   {$temp.tmp_context[1]}
&lt;/CreateJobLogEventRequest&gt;</expression>
                     </parameter>
                  </serviceInput>
                  <link id="jv3ynlwy" targetId="j9iq3fev"/>
               </service>
               <eventContainer id="j9iq3fev">
                  <subflow id="j9iq3ff2">
                     <title>Simulate Error</title>
                     <subflowGUID>1ZKarw0xpyEfQ1ZSVhods0</subflowGUID>
                     <subflowPath>SP-Test-Throw-Fault-Generic</subflowPath>
                     <runForEach>false</runForEach>
                     <input>
                        <parameter name="in_faultCode" source="constant" updatable="true">500</parameter>
                        <parameter name="in_faultDetail" source="formula" updatable="true">
                           <expression language="XQuery">let $faultDetails := &lt;fault&gt;&amp;lt;fault hasElementData="true" hasMessageData="false" name="faultResponse" namespaceURI="http://schemas.informatica.com/spi/types/2013/12/spi-interface/" rethrowable="true" source="/process/flow/scope[@name='Throw_with_parameters']/sequence/throw[@name='Throw_with_parameters']" suspendable="true"&amp;gt;&amp;lt;aetgt:faultResponse xmlns:aetgt="http://schemas.informatica.com/spi/types/2013/12/spi-interface/" xmlns:type="http://schemas.informatica.com/spi/types/2013/12/spi-interface/"&amp;gt;&amp;lt;sf:code xmlns:sf="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"&amp;gt;500&amp;lt;/sf:code&amp;gt;&amp;lt;sf:reason xmlns:sf="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"&amp;gt;Test&amp;lt;/sf:reason&amp;gt;&amp;lt;sf:details xmlns:sf="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"&amp;gt;Test Fault Detail&amp;lt;/sf:details&amp;gt;&amp;lt;/aetgt:faultResponse&amp;gt;&amp;lt;/fault&amp;gt;&lt;/fault&gt;
return
$faultDetails/text()</expression>
                        </parameter>
                        <parameter name="inf_faultReason" source="constant" updatable="true">Simulated Fault</parameter>
                     </input>
                     <outputDef/>
                  </subflow>
                  <flow id="j9iq3few">
                     <service id="jv3ynlyx">
                        <title>Log Completed</title>
                        <serviceName>SP-IPaaS-Create-Job-Event-Entry-DB-NA</serviceName>
                        <serviceGUID/>
                        <serviceInput>
                           <parameter name="in_CreateJobLogEventRequest" source="formula">
                              <expression language="XQuery">&lt;CreateJobLogEventRequest&gt;
   &lt;event_message&gt;TODO: Step Completed Message&lt;/event_message&gt;
   &lt;event_time&gt;{current-dateTime()}&lt;/event_time&gt;
   &lt;event_detail&gt;TODO: Set Detail Info&lt;/event_detail&gt;
   &lt;process_id&gt;{$temp.tmp_context[1]/parentProcessId}&lt;/process_id&gt;
   &lt;logging_level&gt;1&lt;/logging_level&gt;
   &lt;process_name&gt;{$temp.tmp_process_name}&lt;/process_name&gt;
   &lt;process_title&gt;{$temp.tmp_process_title}&lt;/process_title&gt;
   {$temp.tmp_context[1]}
&lt;/CreateJobLogEventRequest&gt;</expression>
                           </parameter>
                        </serviceInput>
                        <link id="jzkcwq38" targetId="jzkcwq37"/>
                     </service>
                     <end id="jzkcwq37"/>
                  </flow>
                  <flow id="j9iq3fez">
                     <assignment id="j9iqk5zk">
                        <title>Update fault Info, Process Title</title>
                        <operation source="field" to="temp.tmp_faultInfo[1]/processName">temp.tmp_process_title</operation>
                        <operation source="formula" to="temp.tmp_process_title">
                           <expression language="XQuery">let $code := $output.faultInfo[1]/code
let $error := $output.faultInfo[1]/reason
let $parts := ($temp.tmp_process_title,  "FAULTED:",$code, $error)
let $process_title := substring(string-join($parts, " "),1,255)
return $process_title</expression>
                        </operation>
                        <operation source="formula" to="temp.tmp_script_out">
                           <expression language="XQuery">ipd:setProcessTitle($temp.tmp_process_title)</expression>
                        </operation>
                        <link id="jv3ynm29" targetId="jv3ynm28"/>
                     </assignment>
                     <assignment id="kzyatoce">
                        <title>Prepare Email</title>
                        <operation source="formula" to="temp.tmp_email_input">
                           <expression language="XQuery">let $context      := $temp.tmp_context 
let $current-time := current-date()
let $date_format  := "[Y0001]-[M01]-[D01] [H01]:[m01]:[s01]"

let $org_id       := $context/orgId/text()
let $environment  := $context/environmentName/text() 
let $base_uri     := $context/baseURI/text() 
let $processId    := $context/parentProcessId/text()
let $processName  := $temp.tmp_process_name
let $recipients   := distinct-values(tokenize($input.in_parameters/alertEmailRecipents/text(), ','))

(:trying to parse fault details if XML and pretty print:)
let $serialization-params := &lt;xsl:output 
                                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                                xmlns:saxon="http://saxon.sf.net/"
                                method="xml"
                                omit-xml-declaration="yes"
                                indent="yes"
                                saxon:indent-spaces="4"/&gt;
                                
let $view_url :=  if (contains($environment, "Cloud"))
    then concat($base_uri,"/activevos-central/projres/apps/app-integration/integrationConsole/index.html#/main/processinstance/",$processId,"/",$processName,"-",$processId,"%7B%7D")
    else concat($base_uri,"/activevos-central/projres/apps/app-integration/integrationConsole/index.html#/main/processinstance/",$processId,"/",$processName,"-",$processId,"%7B",$environment,"%7D")
    
let $faultInfo := $output.faultInfo 

let $detail := $faultInfo/detail/*
let $reason := $faultInfo/reason/*

let $faultDetail := switch (true())
                       case ($detail instance of element()) return 
                            try { saxon:serialize($detail,$serialization-params )
                            } catch * {
                              string($detail)
                            } 
                       case (not(empty($faultInfo/detail/text()))) return 
                            try { saxon:serialize(fn:parse-xml(string($faultInfo/detail/text())),$serialization-params )
                            } catch * {
                              $faultInfo/detail/text()
                            }
                       default return ()

let $faultReason := switch (true())
                       case ($reason instance of element()) return 
                            try { saxon:serialize($reason,$serialization-params )
                            } catch * {
                              string($reason)
                            } 
                       case (not(empty($faultInfo/reason/text()))) return 
                            try { saxon:serialize(fn:parse-xml(string($faultInfo/reason/text())),$serialization-params )
                            } catch * {
                              $faultInfo/reason/text()
                            }
                       default return $faultInfo/reason/text()   

let $email_body :=
&lt;html&gt;
    &lt;head&gt;
        &lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;
        &lt;meta name="Generator" content="Informatica Cloud" /&gt;
        &lt;title&gt;Integration Job Notification&lt;/title&gt;
        &lt;style type="text/css" media="screen"&gt;

            body {{
                font-size: 12px;
                font-family: arial, sans-serif;
                width: 100% !important;
                -webkit-text-size-adjust: 100%;
                -ms-text-size-adjust: 100%;
                margin: 0;
                padding: 0;
            }}
            
            /* Prevent Webkit and Windows Mobile platforms from changing default font sizes, while not breaking desktop design. */
            .ExternalClass {{
                width: 100%;
            }}
            
            /* Force Hotmail to display emails at full width */
            .ExternalClass,.ExternalClass p,.ExternalClass span,.ExternalClass font,.ExternalClass td,.ExternalClass div
                {{
                line-height: 100%;
            }}
            /* Force Hotmail to display normal line spacing.  More on that: http://www.emailonacid.com/forum/viewthread/43/ */
            #backgroundTable {{
                margin: 0;
                padding: 0;
                width: 100% !important;
                line-height: 100% !important;
            }}
            
            p {{
                font-size: 12px;
                font-family: inherit;
            }}
            
            ul {{
                list-style-type: disc;
            }}
            
            li {{
                font-size: 12px;
                font-family: arial, sans-serif;
            }}
            
            table{{
               table-layout: fixed;
               width: 100%;
            }}
            
            table td {{
                border-collapse: collapse;
                font-size: 12px;
                background-color: inherit;
                color: inherit;
                padding: 5px !important;
            }}
            
            td.center {{
                text-align: center;
                white-space: nowrap;
            }}
            

            
            table th {{
                font-size: 12px;
                font-weight: bold;
                background-color: #ddd;
                text-align: left;
            }}
        
            .content table, .content th, .content td {{
              border: 1px solid black;
              border-collapse: collapse;
            }}
    &lt;/style&gt;
       
    &lt;/head&gt;
    &lt;body width="100%" style="margin: 0; padding: 0 !important; mso-line-height-rule: exactly; background: #E4E4E4;" &gt;
    &lt;table id="backgroundTable" align="center"  role="presentation" cellspacing="0" cellpadding="0" border="0"
        style="width: 100%; background: #FFFFFF; border: 12px solid #FFFFFF; width: 90%; border-collapse: collapse; padding: 10px; font-size: 10pt; font-family: Arial, sans-serif;"&gt;
        &lt;tr style="background: #00558c; color: #FFFFFF;"&gt;
            &lt;td style="padding: 8px; padding-left: 12px; color: #FFFFFF;"&gt;&lt;b&gt;IICS - Fault Alert Notification&lt;/b&gt;&lt;/td&gt;
            &lt;td style="padding: 8px; padding-right: 12px; text-align: right; color: #FFFFFF;"&gt;&lt;b&gt;&lt;i&gt;Org:{$org_id} Env:{$environment}&lt;/i&gt;&lt;/b&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td colspan="2"
                style="padding: 0px; padding-top: 10px; background: #FFFFFF; font-size: 10pt;"&gt;
                &lt;table id="messageTable"
                    align="center"
                    style="padding: 0px; border: 0px; width: 100%; background: #F4F4F4; color: #2F2F2F; font-size: 10pt; font-family: Arial, sans-serif;"&gt;
                    &lt;tr&gt;
                        &lt;td style="padding: 2em"&gt;

                            &lt;h2&gt;Unexpected Process Error&lt;/h2&gt;                            
                            &lt;p style="padding-bottom: 5px; font-size: 12pt; font-family: Arial, sans-serif;"&gt;Error in {$temp.tmp_process_name} Process ID [&lt;a href="{$view_url}"&gt;{$processId}&lt;/a&gt;] Job ID: {$context/jobId/text()}&lt;/p&gt;
                            
                            
                            &lt;h2&gt;Error Information&lt;/h2&gt;
                            &lt;table id="AlertTable" class="content" style="border-collapse: collapse; width: unset;" align="left"&gt;
                                &lt;tr &gt;
                                    &lt;td style="width: 150px"&gt;Process Id&lt;/td&gt;
                                    &lt;td&gt;&lt;a href="{$view_url}"&gt;{$processId}&lt;/a&gt;&lt;/td&gt;
                                &lt;/tr&gt;
                                &lt;tr&gt;
                                    &lt;td style="width: 150px"&gt;Process Name&lt;/td&gt;
                                    &lt;td&gt;{$processName}&lt;/td&gt;
                                &lt;/tr&gt;
                                &lt;tr&gt;
                                    &lt;td style="width: 150px"&gt;Error Time&lt;/td&gt;
                                    &lt;td&gt;{fn:format-dateTime(current-dateTime(),$date_format)}&lt;/td&gt;
                                &lt;/tr&gt;
                                &lt;tr&gt;
                                    &lt;td style="width: 150px"&gt;Error Code&lt;/td&gt;
                                    &lt;td&gt;&lt;pre style="margin: 0px"&gt;{$faultInfo/code/text()}&lt;/pre&gt;&lt;/td&gt;
                                &lt;/tr&gt;
                                &lt;tr&gt;
                                    &lt;td style="width: 150px"&gt;Error Reason&lt;/td&gt;
                                    &lt;td&gt;&lt;pre style="margin: 0px"&gt;{$faultReason}&lt;/pre&gt;&lt;/td&gt;
                                &lt;/tr&gt;
                            &lt;/table&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;
                    {
                    if (empty($faultDetail)) then () else
                    &lt;tr style="padding: 2em" &gt;
                        &lt;td&gt;
                            &lt;h2&gt;Fault Detail&lt;/h2&gt;
                            &lt;pre style="border: 1px; padding: 1em; border-color: black; border-style: solid;"&gt;
                            {$faultDetail}
                            &lt;/pre&gt;
                        &lt;/td&gt;
                    &lt;/tr&gt;
                    } 
                &lt;/table&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
    &lt;/body&gt;
&lt;/html&gt;

return
&lt;EmailTaskInput&gt;
   {
   for $recipient in $recipients
   return
   &lt;to&gt;{$recipient}&lt;/to&gt;
   }
   &lt;subject&gt;Error in {util:getAssetName()} on {$environment}&lt;/subject&gt;
   &lt;contentType&gt;text/html&lt;/contentType&gt;
   &lt;body&gt;{util:toXML($email_body)}&lt;/body&gt;
&lt;/EmailTaskInput&gt;
</expression>
                        </operation>
                        <link id="kzyatods" targetId="kzyatodr"/>
                     </assignment>
                     <service id="jv3ynm28">
                        <title>Log Error</title>
                        <serviceName>SP-IPaaS-Create-Job-Event-Entry-DB-NA</serviceName>
                        <serviceGUID/>
                        <serviceInput>
                           <parameter name="in_CreateJobLogEventRequest" source="formula">
                              <expression language="XQuery">&lt;CreateJobLogEventRequest&gt;
   &lt;event_message&gt;TODO: Update this message: Integration Step Failed&lt;/event_message&gt;
   &lt;event_time&gt;{current-dateTime()}&lt;/event_time&gt;
   &lt;event_detail&gt;
Code: {$output.faultInfo[1]/code} 
Reason:{$output.faultInfo[1]/reason}   
Detail:
{$output.faultInfo[1]/detail}&lt;/event_detail&gt;
   &lt;process_id&gt;{$temp.tmp_context[1]/parentProcessId}&lt;/process_id&gt;
   &lt;logging_level&gt;3&lt;/logging_level&gt;
   &lt;process_name&gt;{$temp.tmp_process_name}&lt;/process_name&gt;
   &lt;process_title&gt;{$temp.tmp_process_title}&lt;/process_title&gt;
   {$temp.tmp_context[1]}
&lt;/CreateJobLogEventRequest&gt;</expression>
                           </parameter>
                        </serviceInput>
                        <link id="kzyatocf" targetId="kzyatoce"/>
                     </service>
                     <service id="kzyatodr">
                        <title>Send Email</title>
                        <serviceName>Email-G01:sendEmailService</serviceName>
                        <serviceGUID>2ZM6icvXPAkk6jxADngnoK</serviceGUID>
                        <serviceInput>
                           <parameter name="emailTaskInput" source="field" updatable="true">temp.tmp_email_input</parameter>
                        </serviceInput>
                        <link id="kzyatodt" targetId="jzkcwq2m"/>
                     </service>
                     <throw id="jzkcwq2m">
                        <title>Throw Error</title>
                        <throwInput>
                           <parameter name="code" source="field" updatable="true">output.faultInfo[1]/code</parameter>
                           <parameter name="detail" source="field" updatable="true">output.faultInfo[1]/detail</parameter>
                           <parameter name="reason" source="field" updatable="true">output.faultInfo[1]/reason</parameter>
                        </throwInput>
                     </throw>
                  </flow>
                  <link id="j9iq3ff3" targetId="j9iq3few" type="containerLink"/>
                  <events>
                     <catch faultField="faultInfo" id="j83fl9t4" interrupting="true">
                        <link id="j9iq3ff4" targetId="j9iq3fez" type="containerLink"/>
                     </catch>
                  </events>
               </eventContainer>
            </flow>
         </process>
      </types1:Entry>
      <types1:GUID>fV6YTLRp1ACbYFS3UhGwSE</types1:GUID>
      <types1:DisplayName>TEMPLATE-SP-ETL-Alerts-DB</types1:DisplayName>
   </types1:Item>
   <types1:CurrentServerDateTime>2023-07-14T13:59:14.796Z</types1:CurrentServerDateTime>
</aetgt:getResponse>
